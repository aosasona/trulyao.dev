---
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";

import Tags from "@components/misc/Tags.astro";

import H1 from "@components/mdx/H1.astro";
import H2 from "@components/mdx/H2.astro";
import { getMetaUrl } from "@lib/utils";
import Code from "@components/mdx/Code.astro";
import H3 from "@components/mdx/H3.astro";
import TableOfContents from "@components/layout/TableOfContents.astro";
import H4 from "@components/mdx/H4.astro";
import PostPaginationButton from "@components/layout/PostPaginationButton.astro";

export async function getStaticPaths() {
	let posts = await getCollection("blog", ({ data }) => {
		return import.meta.env.PROD ? data.draft !== true : true;
	});

	posts = posts?.sort((a, b) => a.data.date.valueOf() - b.data.date.valueOf());

	const staticPaths = [];

	for (let i = 0; i < posts.length; i++) {
		const post = posts[i];
		let data = {
			params: { slug: post.slug },
			props: {
				post,
				previousPost: i > 0 ? posts[i - 1] : null,
				nextPost: i < posts.length - 1 ? posts[i + 1] : null,
			},
		};
		staticPaths.push(data);
	}

	return staticPaths;
}

let { post, previousPost, nextPost } = Astro.props;

if (!post) {
	return new Response(null, {
		status: 404,
		statusText: "Not Found",
	});
}

let {
	data: { title, description: desc, tags, keywords, date },
} = post;
const { Content, headings } = await post.render();

const metaUrl = getMetaUrl(title, date);
---

<style>
  [data-icon] {
    display: inline-block;
  }

  .container {
    margin-left: 0;
    margin-right: 0;
  }
</style>

<Layout {title} {desc} metaImage={metaUrl} {keywords} {tags} pubDate={date} isBlogPost>
  <div class="w-fit max-w-full flex items-start gap-2 mt-6 mx-auto">
    <main class="container">
      <h1 class="text-4xl md:text-5xl font-bold leading-tight tracking-normal">{title}</h1>
      <div class="my-3.5"><Tags data={tags || []} /></div>

      <p>Published on <b>{date.toLocaleString("en-US", { dateStyle: "long" })}</b></p>

      {headings.length > 0 ? <TableOfContents {headings} /> : null}

      <article class="blog-content">
	<Content components={{ h1: H1, h2: H2, h3: H3, h4: H4, pre: Code }} />
      </article>

      <p class="mt-8">
        <Icon name="octicon:mark-github-16" /> Edit this page on <a href={"https://github.com/aosasona/trulyao.dev/tree/master/src/content/blog/" + post.id} target="_blank">
          Github
        </a>
      </p>

      {previousPost || nextPost ? (
	<div class="grid grid-cols-2 md:flex md:flex-row items-center justify-between gap-6 md:gap-4 mt-8">
	  {previousPost ? (
	    <PostPaginationButton title={previousPost.data.title} slug={previousPost.slug} direction="previous" />
	  ) : null}

	  {nextPost ? (
	    <PostPaginationButton title={nextPost.data.title} slug={nextPost.slug} direction="next" />
	  ) : null}
	</div>
      ) : null}

      <!-- prettier-ignore -->
      <p class="text-sm leading-loose bg-secondary-dark text-primary-text-dark dark:bg-primary-100 dark:text-secondary-900 px-6 py-4 mt-8">
        <b>Disclaimer</b>: This article represents my own opinions and experiences at the time of writing this article. These opinions may change over time and my experiences could be different from yours, if you find anything that is objectively incorrect or that you need to discuss further, please contact me via any of the links in the header section of this website's homepage.
      </p>
    </main>

    {headings.length > 0 ? <TableOfContents {headings} asSidebar /> : null}
  </div>
</Layout>
