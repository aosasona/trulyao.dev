---
import { Icon } from "astro-icon/components";
---

<style>
  a {
    display: inline-block;
  }

  [data-icon] {
    color: theme("colors.secondary.600");
    font-size: 1rem;
  }

  [data-icon="octicon:moon-24"] {
    @apply rotate-90;
  }

  [data-icon="octicon:sun-24"] {
    color: theme("colors.secondary.900");
  }
</style>

<nav class="max-w-screen w-full border-b border-b-secondary-100 dark:border-b-secondary-900" x-data>
  <div class="md:container flex items-center justify-between space-x-5 py-4 px-8">
    <div class="flex items-center text-sm md:text-base gap-5 md:gap-6 flex-wrap">
      <img src="/images/favicon.jpg" alt="Logo" class="h-6 aspect-square rounded-md hidden md:block" />
      <a href="/">Home</a>
      <a href="/blog">Blog</a>
      <a href="/notes">Notes</a>
      <a href="/projects">Projects</a>
      <a href="/tools">Tools</a>
    </div>

    <button
      x-cloak
      class="h-8 aspect-square flex items-center justify-center border border-secondary-600 dark:border-0 dark:bg-secondary-200 rounded-full transition-all duration-300"
      @click="$store.theme.mode === 'dark' ? $store.theme.enableLightMode() : $store.theme.enableDarkMode()"
    >
      <div class="sr-only">Change color scheme</div>

      <template x-if="$store.theme.mode == 'light'">
        <Icon name="octicon:moon-24" />
      </template>

      <template x-if="$store.theme.mode == 'dark'">
        <Icon name="octicon:sun-24" />
      </template>
    </button>
  </div>
</nav>

<script is:inline>
  function handleThemeChange(isDarkMode) {
    document.documentElement.classList.toggle("dark", isDarkMode);

    // Update the theme-color meta for the appropriate colors in the broweser
    const themeColor = document.querySelector("meta[name=theme-color]");
    themeColor.setAttribute("content", isDarkMode ? "#1b1a18" : "#fdf9ef");
  }

  const persistedDarkModeFlag = (localStorage.getItem("theme") ?? "") === "dark";

  // Set the theme on page load
  handleThemeChange(persistedDarkModeFlag);

  // Initialize Alpine store for theme
  document.addEventListener("alpine:init", () => {
    Alpine.store("theme", {
      mode: persistedDarkModeFlag ? "dark" : "light",

      setMode(value) {
        this.mode = value;
        localStorage.setItem("theme", value);
        handleThemeChange(value === "dark");
      },

      enableDarkMode() {
        this.setMode("dark");
      },

      enableLightMode() {
        this.setMode("light");
      },
    });
  });
</script>
